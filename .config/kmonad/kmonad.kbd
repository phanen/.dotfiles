;; /usr/share/doc/kmonad-bin/keymap/tutorial.kbd
(defcfg
  input  (device-file "/dev/input/by-id/usb-ITE_Tech._Inc._ITE_Device_8910_-event-kbd")
  ;; output (uinput-sink "My KMonad output" "sleep .3 && xset r rate 150 75 && setxkbmap -option compose:ralt")
  output (uinput-sink "KMonad" "sleep .1 && xset r rate 150 75")
  ;; cmp-seq ralt
  fallthrough true
  allow-cmd true
)

(defalias
    ;; switch layer
  qwe  (layer-switch qwerty-l)
  cmk  (layer-switch colemak-l)
  cps  (layer-switch capslock-l)
  num  (layer-switch number-l)

    ;; multi key
  EC   (tap-next esc (around lctrl (layer-toggle ctrl-l)))
  Ec   (tap-next esc lctl)
  SM   (tap-hold-next-release 500 spc (layer-toggle meta-l))
  TB   (tap-hold-next-release 500 tab (layer-toggle mod-l))

  A    (tap-hold-next-release 500 C-spc (layer-toggle a-l))
      ;; TODO: avoid C-x C-x + different prefix in a same layer
  S    (tap-hold-next-release 500 M-s (around (around lctl lalt) (layer-toggle qwerty-l)))
  D    (tap-hold-next-release 500 M-d (layer-toggle d-l))
  W    (tap-hold-next-release 500 M-w (layer-toggle w-l))

  /    (tap-hold-next-release 500 /   lalt)
  .    (tap-hold-next-release 500 .   (around lctrl lsft))

  '    (tap-hold-next-release 500 '   (layer-toggle number-l))

    ;; stciky key
  sls  (sticky-key 300 lsft)
  srs  -
)

(defsrc
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl
)

(deflayer qwerty-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @TB  q    w    e    r    t    y    u    i    o    p    [    ]     \
  @EC  a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            @num rctl
)

(deflayer colemak-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @TB  q    w    f    p    g    j    l    u    y    ;    [    ]    \
  @EC  a    r    s    t    d    h    n    e    i    o    @'  ret
  @sls z    x    c    v    b    k    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            @qwe rctl
)

(deflayer capslock-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  Q    W    E    R    T    Y    U    I    O    P    [    ]    \
  caps A    S    D    F    G    H    J    K    L    ;    '    ret
  lsft Z    X    C    V    B    N    M    ,    .    /    rsft
  lctl lmet lalt           @SM            @qwe rctl
)

(deflayer number-l
  _    _    _    _    _    _    _    _    _    _    _    _    _    bspc
  @TB  S-1  S-2  S-3  S-4  S-5  S-6  S-7  S-8  S-9  0    [    ]     \
  -    1    2    3    4    5    6    7    8    9    0    @'   ret
  +    =    _    grv  {    }    [    ]    ,    @.   @/   @srs
  lctl lmet lalt           @SM            @qwe rctl
)

(deflayer mod-l
  grv  M-f1 M-f2 M-f3 M-f4 M-f5 6    7    8    9    0    -    =    bspc
  @TB  @cps w    e    r    t    y    u    i    o    p    [    ]     \
  @EC  a    s    d    f    g    h    @qwe @cmk l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer meta-l
  M-grv  M-1  M-2  M-3  M-4  M-5  M-6  M-7  M-8  M-9  M-0  M--  M-=  M-bspc
  M-tab  M-q  @W   M-e  M-r  M-t  M-y  M-u  M-i  M-o  M-p  M-[  M-]  \
  @Ec    @A   @S   @D   M-f  M-g  M-h  M-j  M-k  M-l  M-;  M-'  M-ret
  lsft M-z  M-x  M-c  M-v  M-b  M-n  M-m  M-,  M-.  M-/  rsft
  M-lctl M-lmet M-lalt           @SM            M-ralt M-rctl
)

(deflayer a-l
  grv  A-1  A-2  A-3  A-4  A-5  A-6  A-7  A-8  A-9  A-0  A--  A-=  bspc
  @TB  A-q  A-w  A-e  A-r  A-t  A-y  A-u  A-i  A-o  A-p  A-[  A-]   \
  @Ec  A-a  A-s  A-d  A-f  A-g  A-h  A-j  A-k  A-l  A-;  @'   ret
  @sls A-z  A-x  A-c  A-v  A-b  A-n  A-m  A-,  @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer w-l
  grv  C-S-1  C-S-2  C-S-3  C-S-4  C-S-5  C-S-6  C-S-7  C-S-8  C-S-9  C-S-0  C-S--  C-S-=  bspc
  @TB  C-S-q  C-S-w  C-S-e  C-S-r  C-S-t  C-S-y  C-S-u  C-S-i  C-S-o  C-S-p  C-S-[  C-S-]   \
  @EC  C-S-a  C-S-s  C-S-d  C-S-f  C-S-g  C-S-h  C-S-j  C-S-k  C-S-l  C-S-;  @'   ret
  @sls C-S-z  C-S-x  C-S-c  C-S-v  C-S-b  C-S-n  C-S-m  C-S-,  @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer d-l ;; reserved...
  grv  A-1  A-2  A-3  A-4  A-5  A-6  A-7  A-8  A-9  A-0  A--  A-=  bspc
  @TB  A-q  A-w  A-e  A-r  A-t  A-y  A-u  A-i  A-o  A-p  A-[  A-]   \
  @EC  A-a  A-s  A-d  A-f  A-g  A-h  A-j  A-k  A-l  A-;  @'   ret
  @sls A-z  A-x  A-c  A-v  A-b  A-n  A-m  A-,  @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer ctrl-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @vi  q    w    e    r    t    y    u    i    o    p    [    ]     \
  @EC  a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)


;; fake vim-like
(defalias 
  vn (layer-switch vim-normal-l)
  vi (layer-switch vim-insert-l)
  vv (layer-switch vim-visual-l)
  #vc (tap-next @vn (layer-toggle vctrl-l))
  ;; #vt (tap-hold-next-release 500  (layer-toggle mod-l))
)

(deflayer vim-insert-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @TB  q    w    e    r    t    y    u    i    o    p    [    ]     \
  @#vc a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer vim-normal-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @TB  q    w    e    r    t    C-c  C-z  @vi o    C-v  [    ]     \
  @#vc @vi s    d    f    g    left down up   right ;    @'   ret
  @sls @z   x    c    @vv b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)

(deflayer vctrl-l ;; used in non-vim environment
  grv  C-1    C-2    C-3    C-4    C-5    C-6    C-7    C-8    C-9    C-0    C--    C-=    bspc
  @qwe C-q    C-bspc C-e    C-r    C-t    C-y    C-u    C-i    C-o    up     C-[    C-]     \
  @#vc C-a    C-s    C-d    right  C-g    bspc   C-j    C-k    C-l    C-;    @'     C-ret
  @sls C-z    C-x    C-c    C-v    left   down   C-m    C-,    @.     @/     @srs
  C-lctl  C-lmet  C-lalt            C-@SM             C-ralt  C-rctl 
)

(deflayer vim-visual-l
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @TB  q    w    e    r    t    y    u    i    o    p    [    ]     \
  @#vc a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @SM            ralt rctl
)


(defalias
  a   (tap-hold-next-release 500 a lalt)
  b   (tap-hold-next-release 500 b lalt)
  c   (tap-hold-next-release 500 c lalt)
  d   (tap-hold-next-release 500 d lalt)
  e   (tap-hold-next-release 500 e lalt)
  f   (tap-hold-next-release 500 f lalt)
  g   (tap-hold-next-release 500 g lalt)
  h   (tap-hold-next-release 500 h lalt)
  i   (tap-hold-next-release 500 i lalt)
  j   (tap-hold-next-release 500 j lalt)
  k   (tap-hold-next-release 500 k lalt)
  l   (tap-hold-next-release 500 l lalt)
  m   (tap-hold-next-release 500 m lalt)
  n   (tap-hold-next-release 500 n lalt)
  o   (tap-hold-next-release 500 o lalt)
  p   (tap-hold-next-release 500 p lalt)
  q   (tap-hold-next-release 500 q lalt)
  r   (tap-hold-next-release 500 r lalt)
  s   (tap-hold-next-release 500 s lalt)
  t   (tap-hold-next-release 500 t lalt)
  u   (tap-hold-next-release 500 u lalt)
  v   (tap-hold-next-release 500 v lalt)
  w   (tap-hold-next-release 500 w lalt)
  x   (tap-hold-next-release 500 x lalt)
  y   (tap-hold-next-release 500 y lalt)
  z   (tap-hold-next-release 500 z lalt)
)

;; (defalias
;;   t1  (layer-switch tap-next-l)
;;   t2  (layer-switch tap-hold-l)
;;   t3  (layer-switch tap-hold-next-l)
;;   t4  (layer-switch tap-next-release-l)
;;   t5  (layer-switch tap-hold-next-release-l)
;; )
;;
;;
;; (defalias
;;   an  (tap-next-release a lalt)
;;   bn  (tap-next-release b lalt)
;;   cn  (tap-next-release c lalt)
;;   dn  (tap-next-release d lalt)
;;   en  (tap-next-release e lalt)
;;   fn  (tap-next-release f lalt)
;;   gn  (tap-next-release g lalt)
;;   hn  (tap-next-release h lalt)
;;   in  (tap-next-release i lalt)
;;   jn  (tap-next-release j lalt)
;;   kn  (tap-next-release k lalt)
;;   ln  (tap-next-release l lalt)
;;   mn  (tap-next-release m lalt)
;;   nn  (tap-next-release n lalt)
;;   on  (tap-next-release o lalt)
;;   pn  (tap-next-release p lalt)
;;   qn  (tap-next-release q lalt)
;;   rn  (tap-next-release r lalt)
;;   sn  (tap-next-release s lalt)
;;   tn  (tap-next-release t lalt)
;;   un  (tap-next-release u lalt)
;;   vn  (tap-next-release v lalt)
;;   wn  (tap-next-release w lalt)
;;   xn  (tap-next-release x lalt)
;;   yn  (tap-next-release y lalt)
;;   zn  (tap-next-release z lalt)
;; )
;;
;; (defalias
;;   ah  (tap-hold 130 a lalt)
;;   bh  (tap-hold 500 b lalt)
;;   ch  (tap-hold 500 c lalt)
;;   dh  (tap-hold 500 d lalt)
;;   eh  (tap-hold 500 e lalt)
;;   fh  (tap-hold 500 f lalt)
;;   gh  (tap-hold 500 g lalt)
;;   hh  (tap-hold 500 h lalt)
;;   ih  (tap-hold 500 i lalt)
;;   jh  (tap-hold 500 j lalt)
;;   kh  (tap-hold 500 k lalt)
;;   lh  (tap-hold 500 l lalt)
;;   mh  (tap-hold 500 m lalt)
;;   nh  (tap-hold 500 n lalt)
;;   oh  (tap-hold 500 o lalt)
;;   ph  (tap-hold 500 p lalt)
;;   qh  (tap-hold 500 q lalt)
;;   rh  (tap-hold 500 r lalt)
;;   sh  (tap-hold 500 s lalt)
;;   th  (tap-hold 500 t lalt)
;;   uh  (tap-hold 500 u lalt)
;;   vh  (tap-hold 500 v lalt)
;;   wh  (tap-hold 500 w lalt)
;;   xh  (tap-hold 500 x lalt)
;;   yh  (tap-hold 500 y lalt)
;;   zh  (tap-hold 500 z lalt)
;; )
;;
;; (defalias
;;   aQ  (tap-hold-next 500 a lalt)
;;   bQ  (tap-hold-next 500 b lalt)
;;   cQ  (tap-hold-next 500 c lalt)
;;   dQ  (tap-hold-next 500 d lalt)
;;   eQ  (tap-hold-next 500 e lalt)
;;   fQ  (tap-hold-next 500 f lalt)
;;   gQ  (tap-hold-next 500 g lalt)
;;   hQ  (tap-hold-next 500 h lalt)
;;   iQ  (tap-hold-next 500 i lalt)
;;   jQ  (tap-hold-next 500 j lalt)
;;   kQ  (tap-hold-next 500 k lalt)
;;   lQ  (tap-hold-next 500 l lalt)
;;   mQ  (tap-hold-next 500 m lalt)
;;   nQ  (tap-hold-next 500 n lalt)
;;   oQ  (tap-hold-next 500 o lalt)
;;   pQ  (tap-hold-next 500 p lalt)
;;   qQ  (tap-hold-next 500 q lalt)
;;   rQ  (tap-hold-next 500 r lalt)
;;   sQ  (tap-hold-next 500 s lalt)
;;   tQ  (tap-hold-next 500 t lalt)
;;   uQ  (tap-hold-next 500 u lalt)
;;   vQ  (tap-hold-next 500 v lalt)
;;   wQ  (tap-hold-next 500 w lalt)
;;   xQ  (tap-hold-next 500 x lalt)
;;   yQ  (tap-hold-next 500 y lalt)
;;   zQ  (tap-hold-next 500 z lalt)
;; )
;;
;;
;; (defalias
;;   aN  (tap-next a lalt)
;;   bN  (tap-next b lalt)
;;   cN  (tap-next c lalt)
;;   dN  (tap-next d lalt)
;;   eN  (tap-next e lalt)
;;   fN  (tap-next f lalt)
;;   gN  (tap-next g lalt)
;;   hN  (tap-next h lalt)
;;   iN  (tap-next i lalt)
;;   jN  (tap-next j lalt)
;;   kN  (tap-next k lalt)
;;   lN  (tap-next l lalt)
;;   mN  (tap-next m lalt)
;;   nN  (tap-next n lalt)
;;   oN  (tap-next o lalt)
;;   pN  (tap-next p lalt)
;;   qN  (tap-next q lalt)
;;   rN  (tap-next r lalt)
;;   sN  (tap-next s lalt)
;;   tN  (tap-next t lalt)
;;   uN  (tap-next u lalt)
;;   vN  (tap-next v lalt)
;;   wN  (tap-next w lalt)
;;   xN  (tap-next x lalt)
;;   yN  (tap-next y lalt)
;;   zN  (tap-next z lalt)
;; )
;;
;; (deflayer tap-hold-next-release-l
;;   grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;   @TB  @q   @w   @e   @r   @t   @y   @u   @i   @o   @p   [    ]    \
;;   @EC  @a   @s   @d   @f   @g   @h   @j   @k   @l   ;    '    ret
;;   lsft @z   @x   @c   @v   @b   @n   @m   ,    .    /    rsft
;;   lctl lmet lalt           @SM            ralt rctl
;; )
;;
;; (deflayer tap-next-release-l
;;   grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;   @TB  @qn  @wn  @en  @rn  @tn  @yn  @un  @in  @on  @pn  [    ]    \
;;   @EC  @an  @sn  @dn  @fn  @gn  @hn  @jn  @kn  @ln  ;    '    ret
;;   lsft @zn  @xn  @cn  @vn  @bn  @nn  @mn  ,    .    /    rsft
;;   lctl lmet lalt           @SM            ralt rctl
;; )
;;
;; (deflayer tap-hold-l
;;   grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;   @TB  @qh  @wh  @eh  @rh  @th  @yh  @uh  @ih  @oh  @ph  [    ]    \
;;   @EC  @ah  @sh  @dh  @fh  @gh  @hh  @jh  @kh  @lh  ;    '    ret
;;   lsft @zh  @xh  @ch  @vh  @bh  @nh  @mh  ,    .    /    rsft
;;   lctl lmet lalt           @SM            ralt rctl
;; )
;;
;; (deflayer tap-next-l
;;   grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;   @TB  @qN  @wN  @eN  @rN  @tN  @yN  @uN  @iN  @oN  @pN  [    ]    \
;;   @EC  @aN  @sN  @dN  @fN  @gN  @hN  @jN  @kN  @lN  ;    '    ret
;;   lsft @zN  @xN  @cN  @vN  @bN  @nN  @mN  ,    .    /    rsft
;;   lctl lmet lalt           @SM            ralt rctl
;; )
;;
;; (deflayer tap-hold-next-l
;;   grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
;;   @TB  @qQ  @wQ  @eQ  @rQ  @tQ  @yQ  @uQ  @iQ  @oQ  @pQ  [    ]    \
;;   @EC  @aQ  @sQ  @dQ  @fQ  @gQ  @hQ  @jQ  @kQ  @lQ  ;    '    ret
;;   lsft @zQ  @xQ  @cQ  @vQ  @bQ  @nQ  @mQ  ,    .    /    rsft
;;   lctl lmet lalt           @SM            ralt rctl
;; )
