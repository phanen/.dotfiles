;; /usr/share/doc/kmonad-bin/keymap/tutorial.kbd
(defcfg
  input  (device-file "/dev/input/by-id/usb-ITE_Tech._Inc._ITE_Device_8910_-event-kbd")
  output (uinput-sink "My KMonad output" "sleep .3 && xset r rate 150 75 && setxkbmap -option compose:ralt")
  cmp-seq ralt
  fallthrough true ;; unhandled events simply get reemitted?
  allow-cmd true
)

;; switch layer
(defalias
  t1  (layer-switch tap-next-layer)
  t2  (layer-switch tap-hold-layer)
  t3  (layer-switch tap-hold-next-layer)
  t4  (layer-switch tap-next-release-layer)
  t5  (layer-switch tap-hold-next-release-layer)
  qwe  (layer-switch qwerty-layer)
  cmk (layer-switch colemak-layer)
)

;; multi key
(defalias

  #ec (tap-next esc (layer-toggle ctrl-layer))
  #sm (tap-hold-next-release 500 spc (layer-toggle meta-layer))

  #a  (tap-hold-next-release 500 C-spc (layer-toggle a-layer))
  #s  (tap-hold-next-release 500 M-s (layer-toggle s-layer))
  #w  (tap-hold-next-release 500 M-w (layer-toggle w-layer))

  ;; meta+d -> C-spc...
  #d  (tap-hold-next-release 500 C-spc (layer-toggle d-layer))

  #tb (tap-hold-next-release 500 tab (layer-toggle mod-layer))

  / (tap-hold-next-release 500 /   lalt)
  ' (tap-hold-next-release 500 '   (around lctrl lalt))
  . (tap-hold-next-release 500 .   (around lctrl lsft))
)


;; stciky key
(defalias
  sls (sticky-key 300 lsft)
  srs (sticky-key 300 lsft)
)

(defsrc
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  tab  q    w    e    r    t    y    u    i    o    p    [    ]    \
  caps a    s    d    f    g    h    j    k    l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           spc            ralt rctl
)

(deflayer qwerty-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb q    w    e    r    t    y    u    i    o    p    [    ]     \
  @#ec a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer colemak-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb q    w    f    p    g    j    l    u    y    ;    [    ]    \
  @#ec a    r    s    t    d    h    n    e    i    o    @'  ret
  @sls z    x    c    v    b    k    m    ,    @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer mod-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  @t1  @t2  @t3  4    5    6    7    8    9    0    -    =    bspc
  tab  q    @t4  @t5  r    t    y    u    i    o    p    [    ]    \
  @#ec a    s    d    f    g    h    @qwe @cmk l    ;    '    ret
  lsft z    x    c    v    b    n    m    ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer meta-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  M-grv  M-1  M-2  M-3  M-4  M-5  M-6  M-7  M-8  M-9  M-0  M--  M-=  M-bspc
  M-tab  M-q  @#w  M-e  M-r  M-t  M-y  M-u  M-i  M-o  M-p  M-[  M-]  \
  (tap-next esc lctl) @#a  @#s  @#d  M-f  M-g  M-h  M-j  M-k  M-l  M-;  M-'  M-ret
  lsft M-z  Mpodman network inspect podman -x  M-c  M-v  M-b  M-n  M-m  M-,  M-.  M-/  rsft
  M-lctl M-lmet M-lalt           @#sm           M-ralt M-rctl
)

(deflayer s-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  C-A-1  C-A-2  C-A-3  C-A-4  C-A-5  C-A-6  C-A-7  C-A-8  C-A-9  C-A-0  C-A--  C-A-=  bspc
  @#tb C-A-q  C-A-w  C-A-e  C-A-r  C-A-t  C-A-y  C-A-u  C-A-i  C-A-o  C-A-p  C-A-[  C-A-]   \
  @#ec C-A-a  C-A-s  C-A-d  C-A-f  C-A-g  C-A-h  C-A-j  C-A-k  C-A-l  C-A-;  @'   ret
  @sls C-A-z  C-A-x  C-A-c  C-A-v  C-A-b  C-A-n  C-A-m  C-A-,  @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer a-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  A-1  A-2  A-3  A-4  A-5  A-6  A-7  A-8  A-9  A-0  A--  A-=  bspc
  @#tb A-q  A-w  A-e  A-r  A-t  A-y  A-u  A-i  A-o  A-p  A-[  A-]   \
  @#ec A-a  A-s  A-d  A-f  A-g  A-h  A-j  A-k  A-l  A-;  @'   ret
  @sls A-z  A-x  A-c  A-v  A-b  A-n  A-m  A-,  @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer w-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  C-S-1  C-S-2  C-S-3  C-S-4  C-S-5  C-S-6  C-S-7  C-S-8  C-S-9  C-S-0  C-S--  C-S-=  bspc
  @#tb C-S-q  C-S-w  C-S-e  C-S-r  C-S-t  C-S-y  C-S-u  C-S-i  C-S-o  C-S-p  C-S-[  C-S-]   \
  @#ec C-S-a  C-S-s  C-S-d  C-S-f  C-S-g  C-S-h  C-S-j  C-S-k  C-S-l  C-S-;  @'   ret
  @sls C-S-z  C-S-x  C-S-c  C-S-v  C-S-b  C-S-n  C-S-m  C-S-,  @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer d-layer ;; reserved...
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  A-1  A-2  A-3  A-4  A-5  A-6  A-7  A-8  A-9  A-0  A--  A-=  bspc
  @#tb A-q  A-w  A-e  A-r  A-t  A-y  A-u  A-i  A-o  A-p  A-[  A-]   \
  @#ec A-a  A-s  A-d  A-f  A-g  A-h  A-j  A-k  A-l  A-;  @'   ret
  @sls A-z  A-x  A-c  A-v  A-b  A-n  A-m  A-,  @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer ctrl-layer
  C-caps C-f1 C-f2 C-f3 C-f4 C-f5 C-f6 C-f7 C-f8 C-f9 C-f10 C-f11 C-f12
  grv  C-1  C-2  C-3  C-4  C-5  C-6  C-7  C-8  C-9  C-0  C--  C-=  bspc
  @vii C-q  C-w  C-e  C-r  C-t  C-y  C-u  C-i  C-o  C-p  C-[  C-]   C-\
  @#ec C-a  C-s  C-d  C-f  C-g  C-h  C-j  C-k  C-l  C-;  @'   C-ret
  C-@sls C-z  C-x  C-c  C-v  C-b  C-n  C-m  C-,  @.   @/   @srs
  lctl  C-lmet  C-lalt            C-@#sm            C-ralt  C-rctl 
)

;; fake vim-like
(defalias 
  vin (layer-switch vim-normal-layer)
  vii (layer-switch vim-insert-layer)
  viv (layer-switch vim-visual-layer)
  #vc (tap-next @vin (layer-toggle vctrl-layer))
  ;; #vt (tap-hold-next-release 500  (layer-toggle mod-layer))
)

(deflayer vim-insert-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb q    w    e    r    t    y    u    i    o    p    [    ]     \
  @#vc a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer vim-normal-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb q    w    e    r    t    C-c  C-z  @vii o    C-v  [    ]     \
  @#vc @vii s    d    f    g    left down up   down ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer vctrl-layer ;; used in non-vim environment
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  C-1    C-2    C-3    C-4    C-5    C-6    C-7    C-8    C-9    C-0    C--    C-=    bspc
  @qwe C-q    C-bspc C-e    C-r    C-t    C-y    C-u    C-i    C-o    up     C-[    C-]     \
  @#vc C-a    C-s    C-d    right  C-g    bspc   C-j    C-k    C-l    C-;    @'     C-ret
  @sls C-z    C-x    C-c    C-v    left   down   C-m    C-,    @.     @/     @srs
  C-lctl  C-lmet  C-lalt            C-@#sm            C-ralt  C-rctl 
)

(deflayer vim-visual-layer
  caps f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb q    w    e    r    t    y    u    i    o    p    [    ]     \
  @#vc a    s    d    f    g    h    j    k    l    ;    @'   ret
  @sls @z   x    c    v    b    n    m    ,    @.   @/   @srs
  lctl lmet lalt           @#sm           ralt rctl
)



(defalias
  a   (tap-hold-next-release 500 a lalt)
  b   (tap-hold-next-release 500 b lalt)
  c   (tap-hold-next-release 500 c lalt)
  d   (tap-hold-next-release 500 d lalt)
  e   (tap-hold-next-release 500 e lalt)
  f   (tap-hold-next-release 500 f lalt)
  g   (tap-hold-next-release 500 g lalt)
  h   (tap-hold-next-release 500 h lalt)
  i   (tap-hold-next-release 500 i lalt)
  j   (tap-hold-next-release 500 j lalt)
  k   (tap-hold-next-release 500 k lalt)
  l   (tap-hold-next-release 500 l lalt)
  m   (tap-hold-next-release 500 m lalt)
  n   (tap-hold-next-release 500 n lalt)
  o   (tap-hold-next-release 500 o lalt)
  p   (tap-hold-next-release 500 p lalt)
  q   (tap-hold-next-release 500 q lalt)
  r   (tap-hold-next-release 500 r lalt)
  s   (tap-hold-next-release 500 s lalt)
  t   (tap-hold-next-release 500 t lalt)
  u   (tap-hold-next-release 500 u lalt)
  v   (tap-hold-next-release 500 v lalt)
  w   (tap-hold-next-release 500 w lalt)
  x   (tap-hold-next-release 500 x lalt)
  y   (tap-hold-next-release 500 y lalt)
  z   (tap-hold-next-release 500 z lalt)
)

(defalias
  an  (tap-next-release a lalt)
  bn  (tap-next-release b lalt)
  cn  (tap-next-release c lalt)
  dn  (tap-next-release d lalt)
  en  (tap-next-release e lalt)
  fn  (tap-next-release f lalt)
  gn  (tap-next-release g lalt)
  hn  (tap-next-release h lalt)
  in  (tap-next-release i lalt)
  jn  (tap-next-release j lalt)
  kn  (tap-next-release k lalt)
  ln  (tap-next-release l lalt)
  mn  (tap-next-release m lalt)
  nn  (tap-next-release n lalt)
  on  (tap-next-release o lalt)
  pn  (tap-next-release p lalt)
  qn  (tap-next-release q lalt)
  rn  (tap-next-release r lalt)
  sn  (tap-next-release s lalt)
  tn  (tap-next-release t lalt)
  un  (tap-next-release u lalt)
  vn  (tap-next-release v lalt)
  wn  (tap-next-release w lalt)
  xn  (tap-next-release x lalt)
  yn  (tap-next-release y lalt)
  zn  (tap-next-release z lalt)
)

(defalias
  ah  (tap-hold 130 a lalt)
  bh  (tap-hold 500 b lalt)
  ch  (tap-hold 500 c lalt)
  dh  (tap-hold 500 d lalt)
  eh  (tap-hold 500 e lalt)
  fh  (tap-hold 500 f lalt)
  gh  (tap-hold 500 g lalt)
  hh  (tap-hold 500 h lalt)
  ih  (tap-hold 500 i lalt)
  jh  (tap-hold 500 j lalt)
  kh  (tap-hold 500 k lalt)
  lh  (tap-hold 500 l lalt)
  mh  (tap-hold 500 m lalt)
  nh  (tap-hold 500 n lalt)
  oh  (tap-hold 500 o lalt)
  ph  (tap-hold 500 p lalt)
  qh  (tap-hold 500 q lalt)
  rh  (tap-hold 500 r lalt)
  sh  (tap-hold 500 s lalt)
  th  (tap-hold 500 t lalt)
  uh  (tap-hold 500 u lalt)
  vh  (tap-hold 500 v lalt)
  wh  (tap-hold 500 w lalt)
  xh  (tap-hold 500 x lalt)
  yh  (tap-hold 500 y lalt)
  zh  (tap-hold 500 z lalt)
)

(defalias
  aQ  (tap-hold-next 500 a lalt)
  bQ  (tap-hold-next 500 b lalt)
  cQ  (tap-hold-next 500 c lalt)
  dQ  (tap-hold-next 500 d lalt)
  eQ  (tap-hold-next 500 e lalt)
  fQ  (tap-hold-next 500 f lalt)
  gQ  (tap-hold-next 500 g lalt)
  hQ  (tap-hold-next 500 h lalt)
  iQ  (tap-hold-next 500 i lalt)
  jQ  (tap-hold-next 500 j lalt)
  kQ  (tap-hold-next 500 k lalt)
  lQ  (tap-hold-next 500 l lalt)
  mQ  (tap-hold-next 500 m lalt)
  nQ  (tap-hold-next 500 n lalt)
  oQ  (tap-hold-next 500 o lalt)
  pQ  (tap-hold-next 500 p lalt)
  qQ  (tap-hold-next 500 q lalt)
  rQ  (tap-hold-next 500 r lalt)
  sQ  (tap-hold-next 500 s lalt)
  tQ  (tap-hold-next 500 t lalt)
  uQ  (tap-hold-next 500 u lalt)
  vQ  (tap-hold-next 500 v lalt)
  wQ  (tap-hold-next 500 w lalt)
  xQ  (tap-hold-next 500 x lalt)
  yQ  (tap-hold-next 500 y lalt)
  zQ  (tap-hold-next 500 z lalt)
)


(defalias
  aN  (tap-next a lalt)
  bN  (tap-next b lalt)
  cN  (tap-next c lalt)
  dN  (tap-next d lalt)
  eN  (tap-next e lalt)
  fN  (tap-next f lalt)
  gN  (tap-next g lalt)
  hN  (tap-next h lalt)
  iN  (tap-next i lalt)
  jN  (tap-next j lalt)
  kN  (tap-next k lalt)
  lN  (tap-next l lalt)
  mN  (tap-next m lalt)
  nN  (tap-next n lalt)
  oN  (tap-next o lalt)
  pN  (tap-next p lalt)
  qN  (tap-next q lalt)
  rN  (tap-next r lalt)
  sN  (tap-next s lalt)
  tN  (tap-next t lalt)
  uN  (tap-next u lalt)
  vN  (tap-next v lalt)
  wN  (tap-next w lalt)
  xN  (tap-next x lalt)
  yN  (tap-next y lalt)
  zN  (tap-next z lalt)
)

(deflayer tap-hold-next-release-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb @q   @w   @e   @r   @t   @y   @u   @i   @o   @p   [    ]    \
  @#ec @a   @s   @d   @f   @g   @h   @j   @k   @l   ;    '    ret
  lsft @z   @x   @c   @v   @b   @n   @m   ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer tap-next-release-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb @qn  @wn  @en  @rn  @tn  @yn  @un  @in  @on  @pn  [    ]    \
  @#ec @an  @sn  @dn  @fn  @gn  @hn  @jn  @kn  @ln  ;    '    ret
  lsft @zn  @xn  @cn  @vn  @bn  @nn  @mn  ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer tap-hold-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb @qh  @wh  @eh  @rh  @th  @yh  @uh  @ih  @oh  @ph  [    ]    \
  @#ec @ah  @sh  @dh  @fh  @gh  @hh  @jh  @kh  @lh  ;    '    ret
  lsft @zh  @xh  @ch  @vh  @bh  @nh  @mh  ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer tap-next-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb @qN  @wN  @eN  @rN  @tN  @yN  @uN  @iN  @oN  @pN  [    ]    \
  @#ec @aN  @sN  @dN  @fN  @gN  @hN  @jN  @kN  @lN  ;    '    ret
  lsft @zN  @xN  @cN  @vN  @bN  @nN  @mN  ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)

(deflayer tap-hold-next-layer
  esc  f1   f2   f3   f4   f5   f6   f7   f8   f9   f10  f11  f12
  grv  1    2    3    4    5    6    7    8    9    0    -    =    bspc
  @#tb @qQ  @wQ  @eQ  @rQ  @tQ  @yQ  @uQ  @iQ  @oQ  @pQ  [    ]    \
  @#ec @aQ  @sQ  @dQ  @fQ  @gQ  @hQ  @jQ  @kQ  @lQ  ;    '    ret
  lsft @zQ  @xQ  @cQ  @vQ  @bQ  @nQ  @mQ  ,    .    /    rsft
  lctl lmet lalt           @#sm           ralt rctl
)
